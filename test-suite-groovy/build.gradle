plugins {
    id("groovy")
    id("io.micronaut.application")
    id("io.micronaut.test-resources")
}

dependencies {
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")

    implementation(libs.managed.opensearch.rest.client) {
        exclude(group: "commons-logging", module: "commons-logging")
    }
    runtimeOnly(mnLogging.slf4j.jcl.over.slf4j)

    annotationProcessor(mnValidation.micronaut.validation.processor)
    implementation(mnValidation.micronaut.validation)

    implementation(projects.opensearch)
    implementation(mn.micronaut.jackson.databind)
    implementation(mn.micronaut.management)

    runtimeOnly(mnLogging.logback.classic)

    testImplementation(mn.micronaut.http.client)

    testResourcesImplementation(libs.opensearch.testcontainers)
}


mainClassName = "micronaut.example.Application"
micronaut {
    version libs.versions.micronaut.platform.get()
    coreVersion.set(libs.versions.micronaut.asProvider().get())
    runtime "netty"
    testRuntime "spock"
    enableNativeImage false
    processing {
        incremental(true)
        annotations("io.micronaut.*")
    }
    testResources {
        clientTimeout = 300
    }
}

