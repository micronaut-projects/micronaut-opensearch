#
# This file is used to declare the list of libraries
# which are used as dependencies in the project.
# See https://docs.gradle.org/7.4.2/userguide/platforms.html#sub:central-declaration-of-dependencies
#
# For Micronaut, we have 3 kinds of dependencies:
#   - managed dependencies, which are exposed to consumers via a BOM (or version catalog)
#   - managed BOMs, which are imported into the BOM that we generate
#   - all other dependencies, which are implementation details
#
# If a library needs to appear in the BOM of the project, then it must be
# declared with the "managed-" prefix.
# If a BOM needs to be imported in the BOM of the project, then it must be
# declared with the "boms-" prefix.
# Both managed dependencies and BOMs need to have their version declared via
# a managed version (a version which alias starts with "managed-"

[versions]
micronaut = "4.5.0"
micronaut-platform = "4.3.7"
micronaut-docs = "2.0.0"
micronaut-test = "4.2.1"
micronaut-serde = "2.8.2"
micronaut-aws = "4.4.3"
micronaut-kotlin = "4.2.0"
micronaut-logging = "1.2.3"
micronaut-test-resources="2.3.3"
micronaut-validation="4.4.4"

awaitility = "4.2.1"
micronaut-gradle-plugin = "4.3.6"
managed-opensearch-testcontainers = "2.0.1"

# Managed versions appear in the BOM
managed-opensearch-java = "2.10.3"
managed-opensearch-rest-client = "2.14.0"
managed-apache-httpcomponents-httpclient5 = "5.3.1"

kotlin = "1.9.23"
[libraries]
managed-opensearch-java = { module = "org.opensearch.client:opensearch-java", version.ref = "managed-opensearch-java" }
managed-opensearch-rest-client = { module = "org.opensearch.client:opensearch-rest-client", version.ref = "managed-opensearch-rest-client" }
managed-apache-httpcomponents-httpclient5 = { module ="org.apache.httpcomponents.client5:httpclient5", version.ref = "managed-apache-httpcomponents-httpclient5" }
managed-opensearch-testcontainers = { module = "org.opensearch:opensearch-testcontainers", version.ref = "managed-opensearch-testcontainers" }

# Core
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }
micronaut-serde = { module = "io.micronaut.serde:micronaut-serde-bom", version.ref = "micronaut-serde" }
micronaut-aws = { module = "io.micronaut.aws:micronaut-aws-bom", version.ref = "micronaut-aws" }
micronaut-runtime-groovy = { module = "io.micronaut.groovy:micronaut-runtime-groovy" }
micronaut-kotlin = { module = "io.micronaut.kotlin:micronaut-kotlin-bom", version.ref = "micronaut-kotlin" }
micronaut-test-resources = { module = "io.micronaut.testresources:micronaut-test-resources-bom", version.ref = "micronaut-test-resources" }
micronaut-validation = { module = "io.micronaut.validation:micronaut-validation-bom", version.ref = "micronaut-validation" }
awssdk-apache-client = { module = 'software.amazon.awssdk:apache-client' }
awssdk-regions = { module = 'software.amazon.awssdk:regions' }
awssdk-auth = { module = 'software.amazon.awssdk:auth' }

awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
[bundles]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
