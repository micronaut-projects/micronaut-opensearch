plugins {
    id("io.micronaut.application")
    id("io.micronaut.test-resources")
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module('io.micronaut.opensearch:micronaut-opensearch') using project(':opensearch')
    }
}

dependencies {
    
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    implementation(mn.micronaut.context)
    implementation(mn.micronaut.jackson.databind)
    implementation("io.micronaut.validation:micronaut-validation")
    testImplementation(libs.awaitility)
    implementation(project(":opensearch"))
    implementation(mn.snakeyaml)
    runtimeOnly(mnLogging.logback.classic)
    
    testResourcesImplementation(libs.opensearch.testcontainers)
}


mainClassName = "micronaut.example.Application"
micronaut {
    version libs.versions.micronaut.platform.get()
    coreVersion.set(libs.versions.micronaut.asProvider().get())
    testRuntime "junit5"
    enableNativeImage false
    processing {
        incremental(true)
        annotations("io.micronaut.*")
    }
    testResources {
        clientTimeout = 300
    }
}

